openapi: 3.0.2
info:
  contact:
    email: cloudharness@metacell.us
  description: Accounts rest api
  license:
    name: UNLICENSED
  title: accounts_api
  version: 0.1.0
servers:
- url: /api
tags:
- description: ""
  name: infrastructure
- description: ""
  name: users
paths:
  /live:
    get:
      operationId: live
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Healthy
        "500":
          description: Application is not healthy
      summary: Test if application is healthy
      tags:
      - infrastructure
      x-openapi-router-controller: accounts_api.controllers.infrastructure_controller
  /ready:
    get:
      operationId: ready
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Ready
        "500":
          description: Application is not ready yet
      summary: Test if application is ready to take requests
      tags:
      - infrastructure
      x-openapi-router-controller: accounts_api.controllers.infrastructure_controller
  /users:
    get:
      operationId: get_users
      parameters:
      - description: query filter
        explode: true
        in: query
        name: query_string
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_users_200_response'
          description: Get list of users
      security:
      - bearerAuth: []
      summary: Get list of users based on query
      tags:
      - users
      x-openapi-router-controller: accounts_api.controllers.users_controller
    post:
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The user as just saved
      security:
      - bearerAuth: []
      tags:
      - users
      x-openapi-router-controller: accounts_api.controllers.users_controller
  /users/{userid}:
    get:
      operationId: get_user
      parameters:
      - description: user id
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Get a user's public information
      tags:
      - users
      x-openapi-router-controller: accounts_api.controllers.users_controller
    put:
      operationId: update_user
      parameters:
      - description: user id
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The user as just saved
      security:
      - bearerAuth: []
      tags:
      - users
      x-openapi-router-controller: accounts_api.controllers.users_controller
  /users/{username}/password:
    put:
      description: ""
      operationId: users_username_password_put
      parameters:
      - description: user name or email
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
        required: true
      responses:
        "204":
          description: OK
        "400":
          description: incorrect old password
      security:
      - bearerAuth: []
      tags:
      - users
      x-openapi-router-controller: accounts_api.controllers.users_controller
components:
  schemas:
    Valid:
      properties:
        response:
          type: string
      type: object
    Url:
      description: ""
      type: string
    User:
      additionalProperties: true
      description: Keycloak User
      example:
        firstName: firstName
        lastName: lastName
        website: website
        profiles:
          key: ""
        registrationDate: 2000-01-23
        groups:
        - groups
        - groups
        id: id
        avatar: avatar
        email: email
        username: username
      properties:
        id:
          description: user id
          type: string
        username:
          description: Username of the keycloak user
          type: string
        email:
          description: Email address of the keycloak user
          type: string
        firstName:
          description: First Name of the keycloak user
          type: string
        lastName:
          description: Last Name of the keycloak user
          type: string
        groups:
          description: ""
          items:
            type: string
          readOnly: true
          type: array
        profiles:
          additionalProperties: true
          description: ""
          type: object
        registrationDate:
          description: ""
          format: date
          type: string
        avatar:
          description: ""
          type: string
        website:
          description: ""
          type: string
      title: User
      type: object
    Profiles:
      additionalProperties: true
      description: ""
      type: object
    UpdatePassword:
      example:
        old_password: old_password
        new_password: new_password
      properties:
        old_password:
          title: old_password
          type: string
        new_password:
          title: new_password
          type: string
      title: UpdatePassword
      type: object
    get_users_200_response:
      example:
        users:
        - firstName: firstName
          lastName: lastName
          website: website
          profiles:
            key: ""
          registrationDate: 2000-01-23
          groups:
          - groups
          - groups
          id: id
          avatar: avatar
          email: email
          username: username
        - firstName: firstName
          lastName: lastName
          website: website
          profiles:
            key: ""
          registrationDate: 2000-01-23
          groups:
          - groups
          - groups
          id: id
          avatar: avatar
          email: email
          username: username
      properties:
        users:
          items:
            $ref: '#/components/schemas/User'
          title: users
          type: array
      title: get_users_200_response
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: cloudharness.auth.decode_token
