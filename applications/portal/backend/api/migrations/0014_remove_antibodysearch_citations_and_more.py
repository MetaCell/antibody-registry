# Generated by Django 4.2.10 on 2024-07-08 13:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0013_add_citation_field_to_antibody"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalVendorDomain",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "base_url",
                    models.CharField(
                        db_column="domain_name",
                        db_index=True,
                        max_length=2048,
                        null=True,
                    ),
                ),
                (
                    "is_domain_visible",
                    models.BooleanField(db_column="link", default=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("CURATED", "Curated"),
                            ("REJECTED", "Rejected"),
                            ("QUEUE", "Queued"),
                            ("UNDER_REVIEW", "Under Review"),
                        ],
                        db_index=True,
                        default="QUEUE",
                        max_length=12,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vendor",
                    models.ForeignKey(
                        blank=True,
                        db_column="vendor_id",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="api.vendor",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical vendor domain",
                "verbose_name_plural": "historical vendor domains",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalVendor",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(db_column="vendor", db_index=True, max_length=512),
                ),
                (
                    "nif_id",
                    models.CharField(
                        blank=True, db_column="nif_id", max_length=32, null=True
                    ),
                ),
                (
                    "eu_id",
                    models.CharField(
                        blank=True, db_column="euid", max_length=255, null=True
                    ),
                ),
                (
                    "commercial_type",
                    models.CharField(
                        choices=[
                            ("commercial", "commercial"),
                            ("personal", "personal"),
                            ("non-profit", "non-profit"),
                            ("other", "other"),
                        ],
                        db_index=True,
                        default="commercial",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "show_link",
                    models.BooleanField(
                        blank=True, db_index=True, default=False, null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical vendor",
                "verbose_name_plural": "historical vendors",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAntibody",
            fields=[
                ("ix", models.IntegerField(blank=True, db_index=True)),
                (
                    "ab_name",
                    models.CharField(
                        blank=True, db_index=True, max_length=512, null=True
                    ),
                ),
                ("ab_id", models.CharField(db_index=True, max_length=32, null=True)),
                (
                    "accession",
                    models.CharField(
                        blank=True, db_index=True, max_length=32, null=True
                    ),
                ),
                (
                    "commercial_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("commercial", "commercial"),
                            ("personal", "personal"),
                            ("non-profit", "non-profit"),
                            ("other", "other"),
                        ],
                        db_index=True,
                        default="other",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "uid",
                    models.CharField(
                        blank=True, db_index=True, max_length=256, null=True
                    ),
                ),
                ("uid_legacy", models.IntegerField(blank=True, null=True)),
                (
                    "catalog_num",
                    models.CharField(
                        blank=True, db_index=True, max_length=256, null=True
                    ),
                ),
                (
                    "catalog_num_search",
                    models.CharField(
                        blank=True, db_index=True, max_length=256, null=True
                    ),
                ),
                (
                    "cat_alt",
                    models.CharField(
                        blank=True, db_index=True, max_length=512, null=True
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True, db_index=True, max_length=2048, null=True
                    ),
                ),
                (
                    "ab_target",
                    models.CharField(
                        blank=True,
                        db_column="ab_target",
                        db_index=True,
                        max_length=1024,
                        null=True,
                        verbose_name="Target antigen",
                    ),
                ),
                (
                    "entrez_id",
                    models.CharField(
                        blank=True,
                        db_column="ab_target_entrez_gid",
                        db_index=True,
                        max_length=2048,
                        null=True,
                    ),
                ),
                (
                    "uniprot_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                (
                    "target_species_raw",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Comma separated value for target species. Values filled here will be parsed and assigned to the 'Target species' field.",
                        max_length=4096,
                        null=True,
                        verbose_name="Target species (csv)",
                    ),
                ),
                (
                    "subregion",
                    models.CharField(
                        blank=True,
                        db_column="target_subregion",
                        db_index=True,
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "modifications",
                    models.CharField(
                        blank=True,
                        db_column="target_modification",
                        db_index=True,
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "epitope",
                    models.CharField(
                        blank=True, db_index=True, max_length=1024, null=True
                    ),
                ),
                (
                    "clonality",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("unknown", "Unknown"),
                            ("cocktail", "Cocktail"),
                            ("control", "Control"),
                            ("isotype control", "Isotype Control"),
                            ("monoclonal", "Monoclonal"),
                            ("monoclonal secondary", "Monoclonal Secondary"),
                            ("polyclonal", "Polyclonal"),
                            ("polyclonal secondary", "Polyclonal Secondary"),
                            ("oligoclonal", "Oligoclonal"),
                            ("recombinant", "Recombinant"),
                            ("recombinant monoclonal", "Recombinant Monoclonal"),
                            (
                                "recombinant monoclonal secondary",
                                "Recombinant Monoclonal Secondary",
                            ),
                            ("recombinant polyclonal", "Recombinant Polyclonal"),
                            (
                                "recombinant polyclonal secondary",
                                "Recombinant Polyclonal Secondary",
                            ),
                        ],
                        db_index=True,
                        default="unknown",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "clone_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=256, null=True
                    ),
                ),
                (
                    "product_isotype",
                    models.CharField(
                        blank=True, db_index=True, max_length=256, null=True
                    ),
                ),
                (
                    "product_conjugate",
                    models.CharField(
                        blank=True, db_index=True, max_length=512, null=True
                    ),
                ),
                (
                    "defining_citation",
                    models.CharField(blank=True, max_length=16384, null=True),
                ),
                (
                    "citation",
                    models.IntegerField(
                        blank=True, db_index=True, default=0, null=True
                    ),
                ),
                (
                    "product_form",
                    models.CharField(
                        blank=True, db_index=True, max_length=1024, null=True
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "kit_contents",
                    models.TextField(blank=True, db_index=True, null=True),
                ),
                ("feedback", models.TextField(blank=True, db_index=True, null=True)),
                (
                    "curator_comment",
                    models.TextField(blank=True, db_index=True, null=True),
                ),
                (
                    "disc_date",
                    models.CharField(
                        blank=True, db_index=True, max_length=128, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("CURATED", "Curated"),
                            ("REJECTED", "Rejected"),
                            ("QUEUE", "Queued"),
                            ("UNDER_REVIEW", "Under Review"),
                        ],
                        db_index=True,
                        default="QUEUE",
                        max_length=12,
                    ),
                ),
                (
                    "insert_time",
                    models.DateTimeField(
                        blank=True, db_index=True, editable=False, null=True
                    ),
                ),
                (
                    "lastedit_time",
                    models.DateTimeField(
                        blank=True, db_index=True, editable=False, null=True
                    ),
                ),
                (
                    "curate_time",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "show_link",
                    models.BooleanField(blank=True, db_index=True, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "source_organism",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="api.specie",
                    ),
                ),
                (
                    "vendor",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="api.vendor",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical antibody",
                "verbose_name_plural": "historical antibodies",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
