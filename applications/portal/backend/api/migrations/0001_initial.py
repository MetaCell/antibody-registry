# Generated by Django 4.0.6 on 2022-09-30 09:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Antibody',
            fields=[
                ('ix', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('ab_name', models.CharField(db_index=True, max_length=512, null=True)),
                ('ab_id', models.CharField(db_index=True, max_length=32, null=True)),
                ('accession', models.CharField(max_length=32, null=True)),
                ('commercial_type', models.CharField(choices=[('commercial', 'commercial'), ('personal', 'personal'), ('non-profit', 'non-profit'), ('other', 'other')], default='other', max_length=10, null=True)),
                ('uid', models.CharField(db_index=True, max_length=256, null=True)),
                ('uid_legacy', models.IntegerField(null=True)),
                ('catalog_num', models.CharField(db_index=True, max_length=256, null=True)),
                ('cat_alt', models.CharField(max_length=512, null=True)),
                ('url', models.URLField(max_length=2048, null=True)),
                ('subregion', models.CharField(db_column='target_subregion', max_length=256, null=True)),
                ('modifications', models.CharField(db_column='target_modification', max_length=128, null=True)),
                ('epitope', models.CharField(max_length=1024, null=True)),
                ('clonality', models.CharField(choices=[('unknown', 'Unknown'), ('cocktail', 'Cocktail'), ('control', 'Control'), ('isotype control', 'Isotype Control'), ('monoclonal', 'Monoclonal'), ('monoclonal secondary', 'Monoclonal Secondary'), ('polyclonal', 'Polyclonal'), ('polyclonal secondary', 'Polyclonal Secondary'), ('oligoclonal', 'Oligoclonal'), ('recombinant', 'Recombinant'), ('recombinant monoclonal', 'Recombinant Monoclonal'), ('recombinant monoclonal secondary', 'Recombinant Monoclonal Secondary'), ('recombinant polyclonal', 'Recombinant Polyclonal'), ('recombinant polyclonal secondary', 'Recombinant Polyclonal Secondary')], default='unknown', max_length=32)),
                ('clone_id', models.CharField(max_length=256, null=True)),
                ('product_isotype', models.CharField(max_length=256, null=True)),
                ('product_conjugate', models.CharField(max_length=512, null=True)),
                ('defining_citation', models.CharField(max_length=16384, null=True)),
                ('product_form', models.CharField(max_length=1024, null=True)),
                ('comments', models.TextField(null=True)),
                ('applications', models.TextField(null=True)),
                ('kit_contents', models.TextField(null=True)),
                ('feedback', models.TextField(null=True)),
                ('curator_comment', models.TextField(null=True)),
                ('disc_date', models.CharField(max_length=128, null=True)),
                ('status', models.CharField(choices=[('CURATED', 'Curated'), ('REJECTED', 'Rejected'), ('QUEUE', 'Queued')], db_index=True, default='QUEUE', max_length=8)),
                ('insert_time', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('curate_time', models.DateTimeField(auto_now=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(db_column='ab_target', db_index=True, max_length=1024, null=True)),
                ('entrez_id', models.CharField(db_column='ab_target_entrez_gid', db_index=True, max_length=2048, null=True)),
                ('uniprot_id', models.CharField(db_index=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4096, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='vendor', db_index=True, max_length=512)),
                ('nif_id', models.CharField(db_column='nif_id', max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VendorSynonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=512)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='VendorDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_url', models.URLField(db_column='domain_name', db_index=True, max_length=2048, null=True, unique=True)),
                ('is_domain_visible', models.BooleanField(db_column='link', default=True)),
                ('status', models.CharField(choices=[('CURATED', 'Curated'), ('REJECTED', 'Rejected'), ('QUEUE', 'Queued')], db_index=True, default='QUEUE', max_length=8)),
                ('vendor', models.ForeignKey(db_column='vendor_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='api.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='AntibodySpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('antibody', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.antibody')),
                ('specie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.specie')),
            ],
        ),
        migrations.AddField(
            model_name='antibody',
            name='antigen',
            field=models.ForeignKey(db_column='antigen_id', null=True, on_delete=django.db.models.deletion.RESTRICT, to='api.gene'),
        ),
        migrations.AddField(
            model_name='antibody',
            name='source_organism',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='source', to='api.specie'),
        ),
        migrations.AddField(
            model_name='antibody',
            name='species',
            field=models.ManyToManyField(db_column='target_species', related_name='targets', through='api.AntibodySpecies', to='api.specie'),
        ),
        migrations.AddField(
            model_name='antibody',
            name='vendor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='api.vendor'),
        ),
        migrations.AddConstraint(
            model_name='antibody',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('status', 'curated'), _negated=True), models.Q(('status', 'curated'), ('catalog_num__isnull', False), ('ab_name__isnull', False), ('ab_name__exact', ''), ('vendor__isnull', False)), _connector='OR'), name='curated_constraints'),
        ),
    ]
