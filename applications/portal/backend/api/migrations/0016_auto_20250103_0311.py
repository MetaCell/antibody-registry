# Generated by Django 4.2.11 on 2025-01-03 11:11

from django.db import migrations
from django.core.files import File
import os

partners = [
    {"name": "thermofisher", "url": "https://www.thermofisher.com/", "image": "api/migrations/data/partners/thermofisher.jpg"},
    {"name": "proteintech", "url": "https://www.ptglab.com/", "image": "api/migrations/data/partners/proteintech.jpg"},
    {"name": "biocell", "url": "https://bxcell.com/", "image": "api/migrations/data/partners/biocell.jpg"},
    {"name": "chromotek", "url": "http://www.chromotek.com/home-of-alpaca-antibodies/", "image": "api/migrations/data/partners/chromotek.jpg"},
    {"name": "jesselllab", "url": "https://jesselllab.com/", "image": "api/migrations/data/partners/jesselllab.jpg"},
    {"name": "encorbio", "url": "https://encorbio.com/", "image": "api/migrations/data/partners/encorbio.jpg"},
    {"name": "biolegend", "url": "https://www.biolegend.com/", "image": "api/migrations/data/partners/biolegend.jpg"},
    {"name": "leinco", "url": "https://www.leinco.com/", "image": "api/migrations/data/partners/leinco.jpg"},
    {"name": "jacksonimmuno", "url": "https://www.jacksonimmuno.com/", "image": "api/migrations/data/partners/jacksonimmuno.jpg"},
    {"name": "dshb", "url": "http://dshb.biology.uiowa.edu/", "image": "api/migrations/data/partners/dshb.jpg"},
    {"name": "immunostar", "url": "http://immunostar.com/", "image": "api/migrations/data/partners/immunostar.jpg"},
    {"name": "neuromab", "url": "http://neuromab.ucdavis.edu/", "image": "api/migrations/data/partners/neuromab.jpg"},
    {"name": "sysy", "url": "https://www.sysy.com/", "image": "api/migrations/data/partners/sysy.jpg"},
    {"name": "atlasantibodies", "url": "https://atlasantibodies.com/", "image": "api/migrations/data/partners/atlasantibodies.jpg"},
    {"name": "frontier", "url": "https://www.frontier-institute.com/wp/antibodies/?lang=en", "image": "api/migrations/data/partners/frontier.jpg"},
    {"name": "aeonianbiotech", "url": "https://aeonianbiotech.com/", "image": "api/migrations/data/partners/aeonianbiotech.jpg"},
    {"name": "bdbiosciences", "url": "http://www.bdbiosciences.com/us/home", "image": "api/migrations/data/partners/bdbiosciences.jpg"},
    {"name": "miltenyibiotec", "url": "https://www.miltenyibiotec.com/US-en/", "image": "api/migrations/data/partners/miltenyibiotec.jpg"},
    {"name": "revmab", "url": "https://www.revmab.com/", "image": "api/migrations/data/partners/revmab.jpg"},
    {"name": "southernbiotech", "url": "https://www.southernbiotech.com/", "image": "api/migrations/data/partners/southernbiotech.jpg"},
    {"name": "wagner", "url": "http://gwagner.med.harvard.edu/", "image": "api/migrations/data/partners/wagner.jpg"},
    {"name": "zebrafish", "url": "https://zebrafish.org/home/guide.php", "image": "api/migrations/data/partners/zebrafish.jpg"},
    {"name": "genetex", "url": "https://www.genetex.com/", "image": "api/migrations/data/partners/genetex.jpg"},
    {"name": "licor", "url": "https://www.licor.com/bio", "image": "api/migrations/data/partners/LICORbio.png"},
    {"name": "hytest", "url": "https://www.hytest.fi/home", "image": "api/migrations/data/partners/hytest.jpg" },
    {"name": "Ansh Labs", "url": "https://www.anshlabs.com/", "image": "api/migrations/data/partners/anshlabs.png"},
    {"name": "Oasis Biofarm", "url": "https://www.oasisbiofarm.net", "image": "api/migrations/data/partners/oasis.png"},
    {"name": "Nittobo Medical", "url": "https://www.nittobo.co.jp/", "image": "api/migrations/data/partners/Nittobo.png"},
    {"name": "SICGEN", "url": "https://sicgen.pt/", "image": "api/migrations/data/partners/Sicgen_antibodies.png"},
    {"name": "Sino Biological", "url": "https://www.sinobiological.com/", "image": "api/migrations/data/partners/Sino-Biological.png"},
    {"name": "Niels Danbolt University of Oslo", "url": "https://www.uio.no/", "image": "api/migrations/data/partners/University_of_Oslo.png"},
    {"name": "NIH", "url": "https://www.nhpreagents.org/", "image": "api/migrations/data/partners/NIH.png"},
    {"name": "ichorbio", "url": "https://ichor.bio/", "image": "api/migrations/data/partners/ichorbio.png"},
    {"name": "Antibodies Incorporated", "url": "https://www.antibodiesinc.com/", "image": "api/migrations/data/partners/antibodies_incorporated.jpg"},
    {"name": "HUABIO", "url": "https://www.huabio.com/", "image": "api/migrations/data/partners/HUABIO.png"},
    {"name": "NanoTag", "url": "https://nano-tag.com/", "image": "api/migrations/data/partners/NanoTag.jpg"},
    {"name": "Institute for Protein Innovation", "url": "https://proteininnovation.org/", "image": "api/migrations/data/partners/Institute_for_Protein_Innovation.png"},
    {"name": "Fujirebio", "url": "https://www.fujirebio.com/en", "image": "api/migrations/data/partners/Fujirebio.jpeg"},
    {"name": "Boster Biological Technology", "url": "https://www.bosterbio.com/", "image": "api/migrations/data/partners/Boster_Biological-logo.png"},
    {"name": "Fujifilm Wako USA", "url": "https://wakousa.com/", "image": "api/migrations/data/partners/fujifilm-wako-chemicals-usa-corporation-logo-vector.png"},
    {"name": "Active Motif", "url": "https://www.activemotif.com/", "image": "api/migrations/data/partners/Active-Motif.jpg"},
    {"name": "Life Canvas Technologies", "url": "https://lifecanvastech.com/", "image": "api/migrations/data/partners/LifeCanvas.jpeg"},
    {"name": "AdipoGen Life Sciences", "url": "https://adipogen.com/", "image": "api/migrations/data/partners/AdipoGen_Logo_LIFE_SCIENCES_CMYK_2015_NEW_13cm_lowres.jpg"},
    {"name": "Creative Biolabs", "url": "https://www.creativebiolabs.net/?utm_source=antibodyregistry&utm_medium=logo&utm_campaign=Creative+Biolabs-Recombinant+Antibody", "image": "api/migrations/data/partners/biolabs.png"},
    {"name": "Bio-techne", "url": "https://www.bio-techne.com/", "image": "api/migrations/data/partners/bio-techne.png"},
    {"name": "Bio-Rad", "url": "https://www.bio-rad.com/", "image": "api/migrations/data/partners/bio-rad.jpg"}
]

def add_partners(apps, schema_editor):
    Partner = apps.get_model('api', 'Partner')
    for partner in partners:
        if partner.get("image"):
            image_path = partner["image"]
            with open(image_path, 'rb') as image_file:
                Partner.objects.create(
                    name=partner["name"],
                    url=partner["url"],
                    image=File(image_file, name=os.path.basename(image_path))
                )
        else:
            Partner.objects.create(
                name=partner["name"],
                url=partner["url"]
            )

class Migration(migrations.Migration):

    dependencies = [
        ("api", "0015_add_partner_model"),
    ]

    operations = [
        migrations.RunPython(add_partners),
    ]
